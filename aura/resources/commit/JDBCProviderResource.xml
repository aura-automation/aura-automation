<?xml version="1.0" encoding="UTF-8"?>
<resources>
  <Cell  name="${{CellName}}">
    <ServerCluster name="${{ClusterName}}" >
      <JDBCProvider classpath="${DB2UNIVERSAL_JDBC_DRIVER_PATH}/db2jcc.jar;${UNIVERSAL_JDBC_DRIVER_PATH}/db2jcc_license_cu.jar;${DB2UNIVERSAL_JDBC_DRIVER_PATH}/db2jcc_license_cisuz.jar" nativepath="${DB2UNIVERSAL_JDBC_DRIVER_NATIVEPATH}" description="Non-XA DB2 Universal JDBC Driver-compliant Provider.   Datasources created under this provider support only 1-phase commit processing except in the case where driver type 2 is used under WAS z/OS. On WAS z/OS, driver type 2   uses RRS and supports 2-phase commit processing" name="New JDBC Provider" implementationClassName="com.ibm.db2.jcc.DB2ConnectionPoolDataSource">
        <DataSource description="DB2 Universal Driver Datasource" name="PetStoreDS" relationalResourceAdapter="${{__builtin_rra}}" 
        jndiName="jdbc/PetStoreDS1" datasourceHelperClassname="com.ibm.websphere.rsadapter.DB2UniversalDataStoreHelper">
          <J2EEResourcePropertySet>
            <J2EEResourceProperty required="true" description="This is a required property. This is an actual database name, and its not the locally catalogued database name. The Universal JDBC Driver does not rely on information catalogued in the DB2 database directory." name="databaseName" type="java.lang.String" value="PetStoreTest" />
            <J2EEResourceProperty description="The TCP/IP address or host name for the DRDA server. If custom property driverType is set to 4, this property is required." name="serverName" type="java.lang.String" value="testDatabaseServer" />
            <J2EEResourceProperty description="The TCP/IP port number where the DRDA server resides. If custom property driverType is set to 4, this property is required." name="portNumber" type="java.lang.Integer" value="50000" />
            <J2EEResourceProperty description="The description of this datasource." name="description" type="java.lang.String" value="" />
            <J2EEResourceProperty description="The DB2 trace level for logging to the logWriter or trace file. Possible trace levels are: TRACE_NONE = 0,TRACE_CONNECTION_CALLS = 1,TRACE_STATEMENT_CALLS = 2,TRACE_RESULT_SET_CALLS = 4,TRACE_DRIVER_CONFIGURATION = 16,TRACE_CONNECTS = 32,TRACE_DRDA_FLOWS = 64,TRACE_RESULT_SET_META_DATA = 128,TRACE_PARAMETER_META_DATA = 256,TRACE_DIAGNOSTICS = 512,TRACE_SQLJ = 1024,TRACE_ALL = -1, ." name="traceLevel" type="java.lang.Integer" value="" />
            <J2EEResourceProperty description="The trace file to store the trace output. If you specify the trace file, the DB2 Jcc trace will be logged in this trace file. If this property is not specified and the WAS.database trace group is enabled, then both WebSphere trace and DB2 trace will be logged into the WebSphere trace file." name="traceFile" type="java.lang.String" value="" />
            <J2EEResourceProperty description="This setting controls whether or not LOB locators are used to fetch LOB data. If enabled, LOB data is not streamed, but is fully materialized with locators when the user requests a stream on the LOB column. The default value is true." name="fullyMaterializeLobData" type="java.lang.Boolean" value="true" />
            <J2EEResourceProperty description="Determine whether ResultSets are closed or kept open when committing a transaction. The possible values are: 1 (HOLD_CURSORS_OVER_COMMIT), 2 (CLOSE_CURSORS_AT_COMMIT)." name="resultSetHoldability" type="java.lang.Integer" value="2" />
            <J2EEResourceProperty description="This property is used in conjunction with the DB2Binder - collection option which is given when the JDBC/CLI packageset is bound during installation by the DBA." name="currentPackageSet" type="java.lang.String" value="" />
            <J2EEResourceProperty description="This property creates a read only connection. By default this value is false." name="readOnly" type="java.lang.Boolean" value="false" />
            <J2EEResourceProperty description="This property provides a performance directive that affects the internal semantics of the input data type conversion capability of the driver. By default the Universal driver defers 'internal prepare requests'. In this case, the driver works without the benefit of described parameter or result set meta data until execute time. So undescsribed input data is sent 'as is' to the server without any data type cross-conversation of the inputs." name="deferPrepares" type="java.lang.Boolean" value="true" />
            <J2EEResourceProperty description="Identifies the default schema name used to qualify unqualified database object references where applicable in dynamically prepared SQL statements. Unless currentSchema is used, the default schema name is the authorization id of the current session user." name="currentSchema" type="java.lang.String" value="" />
            <J2EEResourceProperty description="Indicates the schema of the DB2 shadow catalog tables or views to search when you issue a database meta data catalog query." name="cliSchema" type="java.lang.String" value="" />
            <J2EEResourceProperty description="Directs all calls to the standard JDBC SQLException.getMessage() to invoke a server-side stored procedure which retrieves the readable message text for the error." name="retrieveMessagesFromServerOnGetMessage" type="java.lang.Boolean" value="true" />
            <J2EEResourceProperty description="Specifies accounting information for the current client for the connection. This information is for client accounting purposes. This value can change during a connection. For a DB2 UDB for Linux, UNIX and Windows server, the maximum length is 255 bytes. A Java empty string is valid for this value, but a Java null value is not valid." name="clientAccountingInformation" type="java.lang.String" value="" />
            <J2EEResourceProperty description="Specifies application information for the current client for the connection. This information is for client accounting purposes. This value can change during a connection. For a DB2 UDB for Linux, UNIX and Windows server, the maximum length is 255 bytes. A Java empty string is valid for this value, but a Java null value is not valid." name="clientApplicationInformation" type="java.lang.String" value="" />
            <J2EEResourceProperty description="Specifies the current client user name for the connection. This information is for client accounting purposes. Unlike the JDBC connection user name, this value can change during a connection. For a DB2 UDB for Linux, UNIX and Windows server, the maximum length is 255 bytes." name="clientUser" type="java.lang.String" value="" />
            <J2EEResourceProperty description="Specifies the workstation name for the current client for the connection. This information is for client accounting purposes. This value can change during a connection. For a DB2 UDB for Linux, UNIX and Windows server, the maximum length is 255 bytes. A Java empty string is valid for this value, but a Java null value is not valid." name="clientWorkstation" type="java.lang.String" value="" />
            <J2EEResourceProperty description="Specifies a comma-separated list of collections on the server. If this property is specified, the currentPackageSet property is ignored." name="currentPackagePath" type="java.lang.String" value="" />
            <J2EEResourceProperty description="Specifies the default schema name that is used to qualify unqualified database objects in dynamically prepared SQL statements. This value of this property sets the value in the CURRENT SQLID special register on a DB2 UDB for OS/390 or z/OS server. If the currentSQLID property is not set, the default schema name is the value in the CURRENT SQLID special register." name="currentSQLID" type="java.lang.String" value="" />
            <J2EEResourceProperty description="For a data source that uses Kerberos security, specifies the name that is used for the data source when it is registered with the Kerberos Key Distribution Center (KDC). It should be of the format user@realm." name="kerberosServerPrincipal" type="java.lang.String" value="" />
            <J2EEResourceProperty description="The maximum time in seconds to wait for the DataSource object to connect to a data source. A value of 0 means that the timeout value is the default system timeout value. " name="loginTimeout" type="java.lang.Integer" value="0" />
            <J2EEResourceProperty description="Specifies the DRDA security mechanism. Possible values are: 3 (CLEAR_TEXT_PASSWORD_SECURITY), 4 (USER_ONLY_SECURITY), 7 (ENCRYPTED_PASSWORD_SECURITY), 9 (ENCRYPTED_USER_AND_PASSWORD_SECURITY), or 11 (KERBEROS_SECURITY). Plesae refer to DB2 manual for the constant value. If this property is specified, the specified security mechanism is the only mechanism that is used. If no value is specified for this property, 3 is used." name="securityMechanism" type="java.lang.Integer" value="" />
            <J2EEResourceProperty description="Specifies whether to append to or overwrite the file that is specified by the traceFile property. The default is false, which means that the file that is specified by the traceFile property is overwritten." name="traceFileAppend" type="java.lang.Boolean" value="false" />
            <J2EEResourceProperty description="Specifies the value for the CURRENT FUNCTION PATH special register of the DB2 server." name="currentFunctionPath" type="java.lang.String" value="" />
            <J2EEResourceProperty description="Specifies whether java.sql.ResultSet.TYPE_SCROLL_SENSITIVE maps to sensitive dynamic or sensitive static scroll. This property is ignored for insensitive scrollable cursors. The default is 0 (TYPE_SCROLL_SENSITIVE_STATIC). Alternatively, it can be set to 1 (TYPE_SCROLL_SENSITIVE_DYNAMIC) to have TYPE_SCROLL_SENSITIVE cursors map to sensitive dynamic cursors or set to 2 (TYPE_SCROLL_ASENSITIVE) to use SENSITIVE whenever possible, otherwise, fallback to INSENSITIVE when the request doesn't support SENSITIVE." name="cursorSensitivity" type="java.lang.Integer" value="" />
            <J2EEResourceProperty description="Determines whether DB2 keeps dynamic SQL statements after commit points. This is applicable only when the target server is DB2 for z/OS. The property default depends on the server. Specifying 1 means YES, DB2 keeps dynamic SQL statements after commit points. Specifying 2 means NO, DB2 does not keep dynamic SQL statements after commit points. If this property is not set defaults are assumed. If the JDBC package set is custom bound without these defaults, this property must be set. The driver has no way to know how custom JDBC packages were bound under current DRDA architecture. This property is not a directive to server, but rather a driver directive." name="keepDynamic" type="java.lang.Integer" value="" />
            <J2EEResourceProperty description="Directive to DB2 servers to either wait indefinitely for a lock or to wait for a certain amount of time for a lock when the lock cannot be obtained immediately. A value of zero means no wait. A value of -1 means to wait indefinitely. A positive integer indicates the number of seconds to wait for a lock." name="currentLockTimeout" type="java.lang.Integer" value="" />
            <J2EEResourceProperty description="Indicates whether or not to detect multithreaded access to a Connection and its corresponding Statements, ResultSets, and MetaDatas." name="enableMultithreadedAccessDetection" type="java.lang.Boolean" value="false" />
            <J2EEResourceProperty description="Specifies whether to allow reauthentication of connections.  This option requires implementation of the doConnectionSetupPerTransaction() method on the DataStoreHelper where the reauthentication is expected to take place." name="reauthentication" type="java.lang.Boolean" value="false" />
            <J2EEResourceProperty description="Specifies whether to allow JMS to get optimized connections from this datasource.  This option will prevent JDBC Applications from getting connections." name="jmsOnePhaseOptimization" type="java.lang.Boolean" value="false" />
            <J2EEResourceProperty description="This SQL statement is used for pre-test connection function. For example, SELECT 1 FROM [TESTTABLE]. If pre-testing of connection is enabled for the connection pool, this SQL statement will be executed to the connection to make sure the connection is good. If you leave this field blank, the default SQL statement, SELECT 1 FROM TABLE1, will be used at runtime. This will slow down the execution because of the exception handling if table TABLE1 is not defined in the database. Users are recommended to provide their own SQL statement to improve the performance." name="preTestSQLString" type="java.lang.String" value="SELECT 1 FROM TABLE1" />
            <J2EEResourceProperty description="This flag should be set to true only if the backend database is configured with failover capability.  This flag will indicate to WebSphere to validate connections when they first get created and to keep trying to get a good connection from the database when the validation fails." name="dbFailOverEnabled" type="java.lang.Boolean" value="false" />
            <J2EEResourceProperty description="This is useful only if dbFailOverEnabled flag is true.  This property controls how many times WebSphere will try to get a connection from the database before giving up" name="connRetriesDuringDBFailover" type="java.lang.Integer" value="100" />
            <J2EEResourceProperty description="This is useful only if dbFailOverEnabled flag is true.  This property controls the interval between retries to retrieve a connection from the database." name="connRetryIntervalDuringDBFailover" type="java.lang.Long" value="3000" />
          </J2EEResourcePropertySet>
          <ConnectionPool purgePolicy="EntirePool" maxConnections="30" />
        </DataSource>
      </JDBCProvider>
    </ServerCluster>
  </Cell>
</resources>

